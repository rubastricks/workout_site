{"ast":null,"code":"var _jsxFileName = \"/Users/alissonrubas/Desktop/workout_site/cliente/src/components/WorkoutTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MainContext } from \"../context/MainContext\";\nimport AuthService from \"../services/auth.service\";\nimport Navbar from \"./Navbar\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport WorkoutForm from \"./WorkoutForm\";\nimport UserSearcherBar from \"./UserSearcherBar\";\nimport Exercises from \"./Exercises\";\n\n// Material UI\nimport { Stack, Box } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkoutTracker() {\n  _s();\n  const [parsedData, setParsedData] = useState(\"\");\n  const [firstName, setfirstName] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [showCode, setShowCode] = useState(false);\n  const [showDefaultDate, setShowDefaultDate] = useState(false);\n  const {\n    jwt,\n    setJwt\n  } = useContext(MainContext);\n  const [isPastDateSelected, setIsPastDateSelected] = useState(false);\n  const [exercises, setExercises] = useState([]);\n  const [bodyPart, setBodyPart] = useState(\"all\");\n  console.log(jwt);\n  const navigate = useNavigate();\n\n  // User information\n  useEffect(() => {\n    try {\n      const decodedJwt = JSON.parse(atob(jwt.split(\".\")[1]));\n      setParsedData(decodedJwt);\n      setfirstName(decodedJwt.firstName);\n    } catch (error) {\n      AuthService.logout();\n      setJwt(\"\");\n      return navigate(\"/\");\n    }\n  }, [jwt, navigate, setJwt]);\n\n  // Calendar Value\n  const handleCalendarClick = value => {\n    console.log(\"Selected date:\", value);\n    setDate(value);\n    setShowCode(true);\n    setShowDefaultDate(true);\n    const currentDate = new Date();\n    const isPastDate = value.setHours(0, 0, 0, 0) < currentDate.setHours(0, 0, 0, 0);\n    setIsPastDateSelected(isPastDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: \"10%\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          sx: {\n            mb: \"20%\"\n          },\n          children: [firstName, \" , Select Day and Workout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserSearcherBar, {\n          setExercises: setExercises,\n          bodyPart: bodyPart,\n          setBodyPart: setBodyPart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Exercises, {\n          setExercises: setExercises,\n          exercises: exercises,\n          bodyPart: bodyPart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date,\n          onClickDay: handleCalendarClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), showDefaultDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deafaultdate\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"16%\"\n            },\n            children: \"Default selected date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \" \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), showCode && /*#__PURE__*/_jsxDEV(WorkoutForm, {\n          isPastDateSelected: isPastDateSelected,\n          selectedDate: date.toISOString().split(\"T\")[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkoutTracker, \"/kZGbn2eINICp+GFjJw4saPvpPY=\", false, function () {\n  return [useNavigate];\n});\n_c = WorkoutTracker;\nexport default WorkoutTracker;\nvar _c;\n$RefreshReg$(_c, \"WorkoutTracker\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","MainContext","AuthService","Navbar","Calendar","WorkoutForm","UserSearcherBar","Exercises","Stack","Box","Typography","Dialog","jsxDEV","_jsxDEV","WorkoutTracker","_s","parsedData","setParsedData","firstName","setfirstName","date","setDate","Date","showCode","setShowCode","showDefaultDate","setShowDefaultDate","jwt","setJwt","isPastDateSelected","setIsPastDateSelected","exercises","setExercises","bodyPart","setBodyPart","console","log","navigate","decodedJwt","JSON","parse","atob","split","error","logout","handleCalendarClick","value","currentDate","isPastDate","setHours","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","alignItems","mt","color","variant","component","mb","onChange","onClickDay","className","style","marginLeft","toDateString","selectedDate","toISOString","_c","$RefreshReg$"],"sources":["/Users/alissonrubas/Desktop/workout_site/cliente/src/components/WorkoutTracker.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { MainContext } from \"../context/MainContext\";\nimport AuthService from \"../services/auth.service\";\nimport Navbar from \"./Navbar\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport WorkoutForm from \"./WorkoutForm\";\nimport UserSearcherBar from \"./UserSearcherBar\";\nimport Exercises from \"./Exercises\";\n\n// Material UI\nimport { Stack, Box } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport Dialog from \"@mui/material/Dialog\";\n\nfunction WorkoutTracker() {\n  const [parsedData, setParsedData] = useState(\"\");\n  const [firstName, setfirstName] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [showCode, setShowCode] = useState(false);\n  const [showDefaultDate, setShowDefaultDate] = useState(false);\n  const { jwt, setJwt } = useContext(MainContext);\n  const [isPastDateSelected, setIsPastDateSelected] = useState(false);\n  const [exercises, setExercises] = useState([]);\n  const [bodyPart, setBodyPart] = useState(\"all\");\n\n  console.log(jwt);\n\n  const navigate = useNavigate();\n\n  // User information\n  useEffect(() => {\n    try {\n      const decodedJwt = JSON.parse(atob(jwt.split(\".\")[1]));\n      setParsedData(decodedJwt);\n      setfirstName(decodedJwt.firstName);\n    } catch (error) {\n      AuthService.logout();\n      setJwt(\"\");\n      return navigate(\"/\");\n    }\n  }, [jwt, navigate, setJwt]);\n\n  // Calendar Value\n  const handleCalendarClick = (value) => {\n    console.log(\"Selected date:\", value);\n\n    setDate(value);\n    setShowCode(true);\n    setShowDefaultDate(true);\n\n    const currentDate = new Date();\n    const isPastDate =\n      value.setHours(0, 0, 0, 0) < currentDate.setHours(0, 0, 0, 0);\n    setIsPastDateSelected(isPastDate);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ display: \"flex\", alignItems: \"center\" }}>\n        <Box\n          sx={{\n            mt: \"10%\",\n            color: \"white\",\n          }}\n        >\n          <Typography variant=\"h4\" component=\"h2\" sx={{ mb: \"20%\" }}>\n            {firstName} , Select Day and Workout\n          </Typography>\n          <UserSearcherBar\n            setExercises={setExercises}\n            bodyPart={bodyPart}\n            setBodyPart={setBodyPart}\n          />\n          <Exercises\n            setExercises={setExercises}\n            exercises={exercises}\n            bodyPart={bodyPart}\n          />\n          <Calendar\n            onChange={setDate}\n            value={date}\n            onClickDay={handleCalendarClick}\n          />\n          {showDefaultDate && (\n            <div className=\"deafaultdate\">\n              <span style={{ marginLeft: \"16%\" }}>Default selected date:</span>{\" \"}\n              {date.toDateString()}\n            </div>\n          )}\n          {showCode && (\n            <WorkoutForm\n              isPastDateSelected={isPastDateSelected}\n              selectedDate={date.toISOString().split(\"T\")[0]}\n            />\n          )}\n        </Box>\n      </Stack>\n    </div>\n  );\n}\n\nexport default WorkoutTracker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}