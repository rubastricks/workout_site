{"ast":null,"code":"var _jsxFileName = \"/Users/alissonrubas/Desktop/workout_site/cliente/src/components/Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport Navbar from \"./Navbar\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exercises(_ref) {\n  _s();\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 3;\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\"https://exercisedb.p.rapidapi.com/exercises\", exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  //Pages\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: \"smooth\"\n    });\n  };\n  if (!currentExercises.length) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: \"110px\"\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"#fff\",\n      variant: \"h3\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: \"44px\",\n          xs: \"30px\"\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: \"110px\",\n          xs: \"50px\"\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > 3 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"secondary\",\n        shape: \"circular\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Navbar","Loader","jsxDEV","_jsxDEV","Exercises","_ref","_s","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","fetchExercisesData","exercisesData","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","length","fileName","_jsxFileName","lineNumber","columnNumber","id","sx","mt","lg","p","children","color","variant","fontWeight","fontSize","xs","mb","direction","gap","flexWrap","justifyContent","map","exercise","index","alignItems","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["/Users/alissonrubas/Desktop/workout_site/cliente/src/components/Exercises.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\n\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport Navbar from \"./Navbar\";\nimport Loader from \"./Loader\";\n\nfunction Exercises({ exercises, setExercises, bodyPart }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 3;\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\n          \"https://exercisedb.p.rapidapi.com/exercises\",\n          exerciseOptions\n        );\n      } else {\n        exercisesData = await fetchData(\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\n          exerciseOptions\n        );\n      }\n\n      setExercises(exercisesData);\n    };\n\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  //Pages\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(\n    indexOfFirstExercise,\n    indexOfLastExercise\n  );\n\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({ top: 1800, behavior: \"smooth\" });\n  };\n  if (!currentExercises.length) return <Loader />;\n\n  return (\n    <Box id=\"exercises\" sx={{ mt: { lg: \"110px\" } }} mt=\"50px\" p=\"20px\">\n      <Navbar />\n      <Typography\n        color=\"#fff\"\n        variant=\"h3\"\n        fontWeight=\"bold\"\n        sx={{ fontSize: { lg: \"44px\", xs: \"30px\" } }}\n        mb=\"46px\"\n      >\n        Showing Results\n      </Typography>\n      <Stack\n        direction=\"row\"\n        sx={{ gap: { lg: \"110px\", xs: \"50px\" } }}\n        flexWrap=\"wrap\"\n        justifyContent=\"center\"\n      >\n        {currentExercises.map((exercise, index) => (\n          <ExerciseCard key={index} exercise={exercise} />\n        ))}\n      </Stack>\n      <Stack mt=\"100px\" alignItems=\"center\">\n        {exercises.length > 3 && (\n          <Pagination\n            color=\"secondary\"\n            shape=\"circular\"\n            defaultPage={1}\n            count={Math.ceil(exercises.length / exercisesPerPage)}\n            page={currentPage}\n            onChange={paginate}\n            size=\"large\"\n          />\n        )}\n      </Stack>\n    </Box>\n  );\n}\n\nexport default Exercises;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}