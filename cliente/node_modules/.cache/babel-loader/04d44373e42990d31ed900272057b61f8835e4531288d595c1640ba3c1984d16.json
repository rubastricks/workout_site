{"ast":null,"code":"// import React, { useContext } from \"react\";\n// import { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\n// import { Box, Typography } from \"@mui/material\";\n\n// import ExerciseCard from \"./ExerciseCard\";\n// import BodyPart from \"./BodyPart\";\n// // import RightArrowIcon from \"../assets/icons/right-arrow.png\";\n// // import LeftArrowIcon from \"../assets/icons/left-arrow.png\";\n\n// // const LeftArrow = () => {\n// //   const { scrollPrev } = useContext(VisibilityContext);\n\n// //   return (\n// //     <Typography onClick={() => scrollPrev()} className=\"right-arrow\">\n// //       <img src={LeftArrowIcon} alt=\"right-arrow\" />\n// //     </Typography>\n// //   );\n// // };\n\n// // const RightArrow = () => {\n// //   const { scrollNext } = useContext(VisibilityContext);\n\n// //   return (\n// //     <Typography onClick={() => scrollNext()} className=\"left-arrow\">\n// //       <img src={RightArrowIcon} alt=\"right-arrow\" />\n// //     </Typography>\n// //   );\n// // };\n\n// const HorizontalScrollbar = ({ data, bodyPart, setBodyPart, isBodyParts }) => {\n//   return (\n//     // LeftArrow={LeftArrow} RightArrow={RightArrow}\n\n//     <ScrollMenu>\n//       {data.map((item) => (\n//         <Box\n//           key={item.id || item}\n//           itemId={item.id || item}\n//           title={item.id || item}\n//           m=\"0 40px\"\n//         >\n//           {isBodyParts ? (\n//             <BodyPart\n//               item={item}\n//               bodyPart={bodyPart}\n//               setBodyPart={setBodyPart}\n//             />\n//           ) : (\n//             <ExerciseCard exercise={item} />\n//           )}\n//         </Box>\n//       ))}\n//     </ScrollMenu>\n//   );\n// };\n\n// export default HorizontalScrollbar;","map":{"version":3,"names":[],"sources":["/Users/alissonrubas/Desktop/workout_site/cliente/src/components/HorizontalScrollbar.js"],"sourcesContent":["// import React, { useContext } from \"react\";\n// import { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\n// import { Box, Typography } from \"@mui/material\";\n\n// import ExerciseCard from \"./ExerciseCard\";\n// import BodyPart from \"./BodyPart\";\n// // import RightArrowIcon from \"../assets/icons/right-arrow.png\";\n// // import LeftArrowIcon from \"../assets/icons/left-arrow.png\";\n\n// // const LeftArrow = () => {\n// //   const { scrollPrev } = useContext(VisibilityContext);\n\n// //   return (\n// //     <Typography onClick={() => scrollPrev()} className=\"right-arrow\">\n// //       <img src={LeftArrowIcon} alt=\"right-arrow\" />\n// //     </Typography>\n// //   );\n// // };\n\n// // const RightArrow = () => {\n// //   const { scrollNext } = useContext(VisibilityContext);\n\n// //   return (\n// //     <Typography onClick={() => scrollNext()} className=\"left-arrow\">\n// //       <img src={RightArrowIcon} alt=\"right-arrow\" />\n// //     </Typography>\n// //   );\n// // };\n\n// const HorizontalScrollbar = ({ data, bodyPart, setBodyPart, isBodyParts }) => {\n//   return (\n//     // LeftArrow={LeftArrow} RightArrow={RightArrow}\n\n//     <ScrollMenu>\n//       {data.map((item) => (\n//         <Box\n//           key={item.id || item}\n//           itemId={item.id || item}\n//           title={item.id || item}\n//           m=\"0 40px\"\n//         >\n//           {isBodyParts ? (\n//             <BodyPart\n//               item={item}\n//               bodyPart={bodyPart}\n//               setBodyPart={setBodyPart}\n//             />\n//           ) : (\n//             <ExerciseCard exercise={item} />\n//           )}\n//         </Box>\n//       ))}\n//     </ScrollMenu>\n//   );\n// };\n\n// export default HorizontalScrollbar;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}